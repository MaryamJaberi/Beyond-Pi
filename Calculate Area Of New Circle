import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import quad

def integrand(x, L):
    return np.sqrt(L**2 - x**2)

def main():
    L = 10  # Length of one line (side of the square)
    
    # Numerically integrate the equation
    area, _ = quad(integrand, 0, L, args=(L))
    
    # Calculate properties of the full circle
    radius_full_circle = L
    area_full_circle = 4 * (np.pi * radius_full_circle**2)
    
    print(f"Radius of the full circle: {radius_full_circle:.6f} units")
    print(f"Area of the full circle: {area_full_circle:.6f} square units")
    
    # Plot the quarter circle and the lines
    x_vals = np.linspace(0, L, 1000)
    y_vals = integrand(x_vals, L)
    
    plt.figure(figsize=(6, 6))
    plt.plot(x_vals, y_vals, label='Quarter Circle')
    plt.plot([0, L], [0, 0], label='Line 1', linestyle='dashed')
    plt.plot([L, L], [0, L], label='Line 2', linestyle='dashed')
    
    plt.fill_between(x_vals, y_vals, color='lightgray', alpha=0.5)
    
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Area Occupied by Lines and Quarter Circle')
    plt.legend()
    plt.grid()
    plt.show()

if __name__ == "__main__":
    main()
